import React, { useState } from 'react';

const containerStyle = {
  display: 'flex',
  flexWrap: 'wrap',
  justifyContent: 'space-between',
  maxWidth: '600px',
  margin: 'auto',
};

const fieldContainer = {
  width: '48%',
  marginBottom: '15px',
};

const inputStyle = {
  width: '100%',
  padding: '8px',
  borderRadius: '4px',
  border: '1px solid #ccc',
};

const labelStyle = {
  display: 'block',
  marginBottom: '5px',
  fontWeight: 'bold',
};

const buttonStyle = {
  width: '100%',
  padding: '10px',
  borderRadius: '4px',
  border: 'none',
  backgroundColor: '#4CAF50',
  color: 'white',
  fontWeight: 'bold',
  cursor: 'pointer',
  marginTop: '20px',
};

const SlpForm = () => {
  const [formData, setFormData] = useState({
    systemName: '',
    reqUserName: '',
    replyUserName: '',
    replyPassword: '',
    deliveryMode: '',
    paamIdentifierType: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    // 🔎 Check if any field is empty
    const emptyFields = Object.entries(formData).filter(([_, value]) => value.trim() === '');

    if (emptyFields.length > 0) {
      alert(`Please fill in all fields. Missing: ${emptyFields.map(([field]) => field).join(', ')}`);
      return;
    }

    // ✅ Show alert on successful submission
    alert(`Form Submitted Successfully! \n\n${JSON.stringify(formData, null, 2)}`);
    console.log('Form Submitted:', formData);
  };

  return (
    <form onSubmit={handleSubmit} style={{ maxWidth: '650px', margin: 'auto' }}>
      <div style={containerStyle}>
        <div style={fieldContainer}>
          <label style={labelStyle}>System Name:</label>
          <input
            type="text"
            name="systemName"
            value={formData.systemName}
            onChange={handleChange}
            style={inputStyle}
            required
          />
        </div>

        <div style={fieldContainer}>
          <label style={labelStyle}>Req_User_Name:</label>
          <input
            type="text"
            name="reqUserName"
            value={formData.reqUserName}
            onChange={handleChange}
            style={inputStyle}
            required
          />
        </div>

        <div style={fieldContainer}>
          <label style={labelStyle}>Reply User Name:</label>
          <input
            type="text"
            name="replyUserName"
            value={formData.replyUserName}
            onChange={handleChange}
            style={inputStyle}
            required
          />
        </div>

        <div style={fieldContainer}>
          <label style={labelStyle}>Reply Password:</label>
          <input
            type="text"
            name="replyPassword"
            value={formData.replyPassword}
            onChange={handleChange}
            style={inputStyle}
            required
          />
        </div>

        <div style={fieldContainer}>
          <label style={labelStyle}>Delivery Mode:</label>
          <select
            name="deliveryMode"
            value={formData.deliveryMode}
            onChange={handleChange}
            style={inputStyle}
            required
          >
            <option value="">Select Mode</option>
            <option value="SYNC">SYNC</option>
            <option value="ASYNC">ASYNC</option>
          </select>
        </div>

        <div style={fieldContainer}>
          <label style={labelStyle}>PAAM Identifier Type:</label>
          <select
            name="paamIdentifierType"
            value={formData.paamIdentifierType}
            onChange={handleChange}
            style={inputStyle}
            required
          >
            <option value="">Select Identifier</option>
            {[...Array(9)].map((_, i) => (
              <option key={i + 1} value={i + 1}>
                {i + 1}
              </option>
            ))}
          </select>
        </div>
      </div>

      <button
        type="submit"
        style={buttonStyle}
        onClick={() => console.log('Submit button clicked')} // 🖱️ Console log for button click
      >
        Submit
      </button>
    </form>
  );
};

export default SlpForm;
